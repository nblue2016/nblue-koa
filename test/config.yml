---
$$version:  "1.0.1"
name:  nblue configuration file

database:
  connections:
    db1: mongodb://nblue:password@127.0.0.1:27017/nblue?authDb=nblue
    db2: sqlite://test/data/nblue.sqlite
    session: redis://localhost/3?lazyConnect=true
  proxies:

schemas:
  - 'test/models'
  - 'test/content'

settings:
  base: ${process.cwd()}
  port: 8088
  supportHttps: false
  handleSignal: true
  jsonError: true
  response:
    headers:
      Access-Control-Allow-Credentials: "true"
      Access-Control-Allow-Headers: "Origin, X-Requested-With, Content-Type, Accept, Token"
      Access-Control-Allow-Methods: "HEAD, GET, POST, PUT, DELETE, OPTIONS"
      Access-Control-Allow-Origin: "unknown"
      Access-Control-Max-Age: "3628800"
    origins:
      - "http://localhost:8088"

logger:
  file: './test/website.log'
  level: 4
  levels:
    rest: 3

components:
  - name: logger
    src: 'test/components/logger.js'
#  - logger
  - static
  - cache
  - data
#  - session
  - session?redis=true
#  - scope
  - name: oauth
    src: 'lib/oauth/component'
#   config: 'oauth.yml'

middlewares:
  - session
  - logger

controllers:
  - 'test/controllers/controllers.yml'
  - name: test
    src: test/controllers/test.js
    routes:
      get:
        '/ls': ls
        '/hello':
          method: hello
          middlewares:
            - hello
        '/pass': pass
        '/empty': empty
        '/test': test

static:
  paths:
    - 'test/content'
    - root: 'test/static'
      options:
        etag: false

session:
  database:
    connection: session
#    connection: redis://localhost/3?lazyConnect=true
  settings:
    expire: 1200000
    encode: false

scope:
  database:
    connection: db2

  settings:
    ignoreCase: false
    allowGuest: false
    mergeRouter: models

oauth:
  test: 'v1'
  test2: 'v2'
...
